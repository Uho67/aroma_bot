generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  chat_id        String          @unique
  user_name      String?
  first_name     String?
  last_name      String?
  is_blocked     Boolean         @default(false)
  is_in_chat     Boolean         @default(false)
  is_subscriber  Boolean         @default(false)
  attention_needed Boolean   @default(false)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  userSalesRules UserSalesRule[]
}

model Post {
  id             Int      @id @default(autoincrement())
  image          String
  description    String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  link_to_button String?
}

model ButtonSettings {
  id          Int      @id @default(autoincrement())
  name        String
  type        String
  value       String
  order       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  render_type String?
}

model StartMessageSettings {
  id        Int      @id @default(autoincrement())
  text      String
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Admin {
  id        Int      @id @default(autoincrement())
  user_name String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SalesRule {
  id             Int             @id @default(autoincrement())
  name           String
  description    String?
  image          String?
  max_uses       Int             @default(1)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  coupons        CouponCode[]
  userSalesRules UserSalesRule[]
}

model CouponCode {
  id            Int       @id @default(autoincrement())
  code          String    @unique
  chat_id       String
  uses_count    Int       @default(0)
  max_uses      Int       @default(1)
  used_at       DateTime?
  is_sent       Boolean   @default(false)
  sales_rule_id Int
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  sales_rule    SalesRule @relation(fields: [sales_rule_id], references: [id])
}

model UserSalesRule {
  id            Int       @id @default(autoincrement())
  user_id       Int
  sales_rule_id Int
  createdAt     DateTime  @default(now())
  salesRule     SalesRule @relation(fields: [sales_rule_id], references: [id], onDelete: Cascade)
  user          User      @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([user_id, sales_rule_id])
}

model Configuration {
  id        Int      @id @default(autoincrement())
  path      String   @unique
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
